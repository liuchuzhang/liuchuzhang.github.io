[{"title":"算法","tag":["javascript"],"time":"2018-12-20 02:30:10","url":"/post/2018-12-20T02;30;10_算法_","image":"/contents/2018-12-20T02;30;10_算法_/image.jpg","content":"\r\n## FizzBuzz\r\n\r\n```js\r\nconst FizzBuzz = (start, end, cb) => {\r\n  for (let i = start; i <= end; i++) {\r\n    if (i % 3 === 0 && i % 5 === 0) {\r\n      cb(0)\r\n    } else if (i % 3 === 0) {\r\n      cb(1)\r\n    } else if (i % 5 === 0) {\r\n      cb(2)\r\n    } else {\r\n      continue\r\n    }\r\n  }\r\n}\r\n\r\nFizzBuzz(1, 100, type => {\r\n  switch (type) {\r\n    case 0:\r\n      console.log('FizzBuzz')\r\n      break\r\n    case 1:\r\n      console.log('Fizz')\r\n      break\r\n    case 2:\r\n      console.log('Buzz')\r\n      break\r\n    default:\r\n      break\r\n  }\r\n})\r\n```\r\n\r\n## 二叉树的递归遍历方法\r\n\r\n二叉树的一个例子\r\n\r\n```js\r\n{\r\n    \"ruleId\":\"\",\r\n    \"name\":\"客户年龄大于20\",\r\n    \"id\":\"root\",\r\n    \"expression\":\"age>20\",\r\n    \"yes\":{\r\n        \"name\":\"客户年龄大于25\",\r\n        \"id\":\"root-true\",\r\n        \"expression\":\"age>25\",\r\n        \"yes\":{\r\n            \"name\":\"可贷金额为五万\",\r\n            \"id\":\"root-true-true\",\r\n            \"expression\":\"money = 50000\"\r\n        },\r\n        \"no\":{\r\n            \"name\":\"可贷金额为三万\",\r\n            \"id\":\"root-true-false\",\r\n            \"expression\":\"money = 30000\"\r\n        }\r\n    },\r\n    \"no\":{\r\n        \"name\":\"客户年龄小于18\",\r\n        \"id\":\"root-false\",\r\n        \"expression\":\"age<18\",\r\n        \"yes\":{\r\n            \"name\":\"不可贷款\",\r\n            \"id\":\"root-false-true\",\r\n            \"expression\":\"money = 0\"\r\n        },\r\n        \"no\":{\r\n            \"name\":\"可贷金额为一万\",\r\n            \"id\":\"root-false-false\",\r\n            \"expression\":\"money = 10000\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n1. 先序遍历\r\n\r\n```js\r\nfunction preorder(data) {\r\n  if (data) {\r\n    console.log(data)\r\n    preorder(data.yes)\r\n    preorder(data.no)\r\n  }\r\n}\r\n```\r\n\r\n2. 中序遍历\r\n\r\n```js\r\nfunction preorder(data) {\r\n  if (data) {\r\n    preorder(data.yes)\r\n    console.log(data)\r\n    preorder(data.no)\r\n  }\r\n}\r\n```\r\n\r\n3. 后序遍历\r\n\r\n```js\r\nfunction preorder(data) {\r\n  if (data) {\r\n    preorder(data.yes)\r\n    preorder(data.no)\r\n    console.log(data)\r\n  }\r\n}\r\n```\r\n\r\n## 遍历树状结构\r\n\r\n```js\r\nconst data = [\r\n  {\r\n    name: '中国',\r\n    children: [\r\n      {\r\n        name: '教第三节课'\r\n      },\r\n      {\r\n        name: '教呼呼',\r\n        children: [\r\n          {\r\n            name: '大一',\r\n            children: [\r\n              {\r\n                name: '课程1',\r\n                children: [\r\n                  {\r\n                    name: '1231'\r\n                  },\r\n                  {\r\n                    name: '121'\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                name: '课程2',\r\n                children: [\r\n                  {\r\n                    name: '1232'\r\n                  },\r\n                  {\r\n                    name: '122'\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                name: '课程3',\r\n                children: [\r\n                  {\r\n                    name: '1233'\r\n                  },\r\n                  {\r\n                    name: '123'\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: '活动',\r\n        children: null\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\ngetArray(data, '活动')\r\nfunction getArray(data, name) {\r\n  for (var i in data) {\r\n    console.log('i', i)\r\n    console.log('datai', data[i].children)\r\n    if (data[i].name == name) {\r\n      console.log(data[i])\r\n      break\r\n    } else {\r\n      getArray(data[i].children, name)\r\n    }\r\n  }\r\n}\r\n```\r\n"},{"title":"vscode 快捷键","tag":["vscode"],"time":"2018-12-20 02:46:34","url":"/post/2018-12-20T02;46;34_vscode快捷键","image":"/contents/2018-12-20T02;46;34_vscode快捷键/image.jpg","content":"\r\n| 快捷键          | 功能                               |\r\n| --------------- | ---------------------------------- |\r\n| ctrl+shift+D    | 打开 Debugger                      |\r\n| ctrl+shift+K    | 删除光标所在的一整行               |\r\n| ctrl+shift+L    | 选择当前文件中所有你当前选中的词汇 |\r\n| ctrl+shift+F    | 打开全局搜索                       |\r\n| ctrl+shift+M    | 打开你的问题面板                   |\r\n| ctrl+shift+H    | 对当前文件的查询替换               |\r\n| ctrl+shift+S    | 文件另存为                         |\r\n| ctrl+shift+T    | 打开最近关闭的那个文件             |\r\n| ctrl+shift+X    | 打开安装插件的入口                 |\r\n| ctrl+shift+V    | 预览 MarkDown                      |\r\n| ctrl+shift+空格 | 参数提示                           |\r\n| ctrl+shift+\\    | 光标跳转到花括号闭合处             |\r\n\r\n| 快捷键               | 功能                       |\r\n| -------------------- | -------------------------- |\r\n| ctrl+B               | 打开或者关闭侧边栏         |\r\n| ctrl+W               | 关闭当前窗口               |\r\n| ctrl+P               | 打开最近关闭的文件         |\r\n| ctrl+]/[             | 左右控制行缩进             |\r\n| ctrl+/               | 注释一行或取消当前行的注释 |\r\n| ctrl+F               | 查询在当前文件             |\r\n| ctrl+,               | 打开用户设置               |\r\n| ctrl+N               | 新建一个文件               |\r\n| ctrl+O               | 打开一个文件               |\r\n| ctr+`|打开集成的终端 |\r\n\r\n| 快捷键        | 功能                                                                 |\r\n| ------------- | -------------------------------------------------------------------- |\r\n| ctrl+k ctrl+s | 打开快捷键设置(其实每个人的操作习惯不同，在此你可以自定义你的键组合) |\r\n| ctrl+k U      | 关闭工作区中没有更改的编辑窗口                                       |\r\n| ctrl+k Z      | 进入 zen 模式，就是删除所有其他让人分心的元素，安心写代码的模式      |\r\n| ctrl+k R      | 在 mac 中是在文件系统（Finder）中显示你正在编辑的文件                |\r\n| ctrl+k P      | 复制当前文件的绝对路径                                               |\r\n"},{"title":"使用 Bpmn 显示流程图并设置颜色","tag":["vue"],"time":"2018-12-26 06:34:52","url":"/post/2018-12-26T06;34;52_如何使用bpmn-js设置样式","image":"/contents/2018-12-26T06;34;52_如何使用bpmn-js设置样式/image.jpg","content":"\r\n## 使用 Bpmn\r\n\r\n前端框架使用的是 Vue ，流程图使用   \r\n需要先拿到 XML 的字符串找到到需要变样式的 `id` 才能进行样式设置   \r\n安装依赖 `npm install bpmn-js -S`\r\n\r\n- [bpmn-js](https://github.com/bpmn-io)\r\n- [官方文档地址](https://bpmn.io)\r\n- [官方 examples](https://github.com/bpmn-io/bpmn-js-examples)\r\n\r\ntemplate\r\n\r\n```html\r\n<template>\r\n  <div class=\"container\"><div class=\"canvas\" ref=\"canvas\"></div></div>\r\n</template>\r\n```\r\n\r\nscript\r\n\r\n```js\r\n// 查看 Bpmn 引入 Viewer 但 Viewer 设置颜色方法单一\r\n// 由于这里需要更多设置颜色的功能所以引入了 Modeler 并设置 `pointer-events: none`\r\n// 更多功能查看 https://github.com/bpmn-io\r\nimport BpmnModeler from 'bpmn-js/lib/Modeler'\r\nimport Modeling from 'bpmn-js/lib/features/modeling/Modeling'\r\nexport default {\r\n  data() {\r\n    return {\r\n      bpmnModeler: null,\r\n      container: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initBpmn()\r\n  },\r\n  methods: {\r\n    initBpmn() {\r\n      this.container = this.$refs.content\r\n      const canvas = this.$refs.canvas\r\n      this.bpmnModeler = new BpmnModeler({\r\n        container: canvas,\r\n        bpmnRenderer: {\r\n          defaultFillColor: 'white',\r\n          defaultStrokeColor: '#5c5d66'\r\n        }\r\n      })\r\n      this.createNewDiagram(this.bpmnModeler)\r\n    },\r\n    createNewDiagram(viewer) {\r\n      // bpmn 的 XML 字符串\r\n      const bpmnXmlStr = ''\r\n      const self = this\r\n      this.bpmnModeler.importXML(bpmnXmlStr, function(err) {\r\n        if (err) {\r\n          console.log('bpmn xml 构建失败!')\r\n          console.error(err)\r\n        } else {\r\n          // 构建成功\r\n          // self.success()\r\n        }\r\n        const canvas = self.bpmnModeler.get('canvas'),\r\n          elementRegistry = viewer.get('elementRegistry'),\r\n          modeling = viewer.get('modeling'),\r\n          overlays = viewer.get('overlays')\r\n        canvas.zoom('fit-viewport')\r\n\r\n        // 项目节点 id\r\n        const nodeIds = ['id1   ...']\r\n        // 线和箭头 id\r\n        const lineIds = ['id1   ...']\r\n        // 分叉节点 id\r\n        const bifIds = ['exclusivegateway1', 'exclusivegateway2']\r\n        const allNodeIds = [...nodeIds, ...lineIds, ...bifIds]\r\n        // 设置 Bpmn 样式一共有提供三种方法\r\n        // 新建 DOM 来覆盖样式\r\n        self.setBifNodeColor(bifIds, elementRegistry, overlays)\r\n        // modeling 的方法 setColor 可直接设置颜色\r\n        self.setLineColor(lineIds, modeling, elementRegistry)\r\n        // 添加 ClassName 设置样式\r\n        self.setNodeColor(nodeIds, 'success-node', canvas)\r\n      })\r\n    },\r\n    setBifNodeColor(ids, elementRegistry, overlays) {\r\n      ids.forEach(id => {\r\n        // 获取模型对象\r\n        const shape = elementRegistry.get(id)\r\n        // 这里用到了 JQuery, 此 $ 为全局的 JQuery \r\n        const $overlayHtml = $('<div class=\"highlight-overlay\">').css({\r\n          width: shape.width,\r\n          height: shape.height,\r\n          // 这里随便搞了个飞机图\r\n          'background-image': 'url(https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=3087158545,508701713&fm=26&gp=0.jpg)',\r\n          'background-size': 'cover'\r\n        })\r\n        overlays.add(id, {\r\n          position: {\r\n            top: 0,\r\n            left: 0\r\n          },\r\n          html: $overlayHtml\r\n        })\r\n      })\r\n    },\r\n    setLineColor(ids, modeling, elementRegistry) {\r\n      const elements = ids.map(id => elementRegistry.get(id))\r\n      modeling.setColor(elements, {\r\n        stroke: 'green',\r\n        fill: 'green'\r\n      })\r\n    },\r\n    setNodeColor(ids, colorClass, canvas) {\r\n      ids.forEach(id => canvas.addMarker(id, colorClass))\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nscss\r\n\r\n```scss\r\n.bjs-container, .canvas .djs-hit {\r\n  pointer-events: none !important;\r\n}\r\n.success-node {\r\n  .djs-visual {\r\n    rect,\r\n    circle {\r\n      stroke: green !important;\r\n      stroke-width: 2px !important;\r\n      fill: #fff !important;\r\n      color: green;\r\n    }\r\n    tspan {\r\n      fill: green;\r\n    }\r\n    path {\r\n      stroke: green !important;\r\n    }\r\n  }\r\n}\r\n.highlight-overlay {\r\n  // 这里设置自定义 DOM 样式\r\n}\r\n```\r\n"}]